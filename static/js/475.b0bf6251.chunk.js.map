{"version":3,"file":"static/js/475.b0bf6251.chunk.js","mappings":"kLACA,EAA4B,4B,SCIfA,EAAW,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnC,OACE,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAI,OAAEF,QAAF,IAAEA,EAAAA,EAAY,KAAOG,GAAE,kBAAaL,GAAvD,UACE,cAAGM,UAAWC,EAAd,SAA8BN,OAIrC,ECZD,EAA4B,6BCGfO,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOP,EAAe,EAAfA,SACjC,OACE,0BACE,eAAII,UAAWC,EAAf,SACGE,EAAMC,KAAI,YAAmB,IAAhBV,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KAChB,OAAO,SAACF,EAAD,CAAUG,SAAUA,EAAmBF,GAAIA,EAAIC,KAAMA,GAAlBD,EAC3C,OAIR,C,6HCZYW,EAAkB,mCAAG,sGACTC,EAAAA,EAAAA,IACrB,6FAF8B,uBACxBC,EADwB,EACxBA,KADwB,kBAKzBA,EAAKC,QAAQJ,KAAI,YACtB,MAAO,CAAEV,GADgC,EAAhBA,GACZC,KAD4B,EAAZc,MAE9B,KAP+B,2CAAH,qD,2BCGhB,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAqBF,EAAAA,EAAAA,UAAS,MAArBG,GAAT,eAEA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOR,EAAP,KAAcY,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBJ,GAAW,GAFK,SAIGR,IAJH,OAIVE,EAJU,OAKhBQ,EAASR,GALO,gDAOhBO,EAAS,KAAMI,SAPC,yBAShBL,GAAW,GATK,4EAAH,qDAYjBI,GACD,GAAE,KAGD,gCACGL,IAAW,SAACO,EAAA,EAAD,KACZ,eAAIC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,WAApC,4BACCnB,EAAMoB,SAAU,SAACrB,EAAA,EAAD,CAAWC,MAAOA,MAGxC,C","sources":["webpack://goit-react-hw-05-movies/./src/components/FilmItem/FilmItem.module.css?43a2","components/FilmItem/FilmItem.jsx","webpack://goit-react-hw-05-movies/./src/components/FilmsWrap/FilmsWrap.module.css?d199","components/FilmsWrap/FilmsWrap.jsx","components/ApiFetch/FetchTrendingFilms.jsx","components/pages/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"trendFilm\":\"FilmItem_trendFilm__n9shB\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport css from '../FilmItem/FilmItem.module.css';\n\nexport const FilmItem = ({ id, name, location }) => {\n  return (\n    <li>\n      <Link state={{ from: location ?? '/' }} to={`/movies/${id}`}>\n        <p className={css.trendFilm}>{name}</p>\n      </Link>\n    </li>\n  );\n};\n\nFilmItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n\n  location: PropTypes.shape({\n    state: PropTypes.shape().isRequired,\n  }),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filmsWrap\":\"FilmsWrap_filmsWrap__oA9TV\"};","import PropTypes, { number, string } from 'prop-types';\nimport { FilmItem } from 'components/FilmItem/FilmItem.jsx';\nimport css from '../FilmsWrap/FilmsWrap.module.css';\n\nexport const FilmsWrap = ({ films, location }) => {\n  return (\n    <div>\n      <ul className={css.filmsWrap}>\n        {films.map(({ id, name }) => {\n          return <FilmItem location={location} key={id} id={id} name={name} />;\n        })}\n      </ul>\n    </div>\n  );\n};\nFilmsWrap.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: number.isRequired,\n      name: string.isRequired,\n    }).isRequired\n  ).isRequired,\n\n  location: PropTypes.shape({\n    state: PropTypes.shape().isRequired,\n  }),\n};\n","import axios from 'axios';\n\nexport const FetchTrendingFilms = async () => {\n  const { data } = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/week?api_key=004aa31770cc2729c6dd319813b8b5dc'\n  );\n\n  return data.results.map(({ id, title }) => {\n    return { id, name: title };\n  });\n};\n","import { useState, useEffect } from 'react';\nimport { FetchTrendingFilms } from '../ApiFetch/FetchTrendingFilms.jsx';\nimport { FilmsWrap } from 'components/FilmsWrap/FilmsWrap.jsx';\nimport { Loader } from '../Loader/Loader.jsx';\n\nexport default function HomePage() {\n  const [loading, setLoading] = useState(false);\n  const [, setError] = useState(null);\n\n  const [films, setFilms] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n\n        const data = await FetchTrendingFilms();\n        setFilms(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <h2 style={{ margin: '20px', color: '#79ad79' }}>Trending today</h2>\n      {films.length && <FilmsWrap films={films} />}\n    </>\n  );\n}\n"],"names":["FilmItem","id","name","location","state","from","to","className","css","FilmsWrap","films","map","FetchTrendingFilms","axios","data","results","title","HomePage","useState","loading","setLoading","setError","setFilms","useEffect","fetchMovies","message","Loader","style","margin","color","length"],"sourceRoot":""}